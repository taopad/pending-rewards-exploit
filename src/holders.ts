import { createPublicClient, http, parseAbiItem } from "viem"
import { mainnet } from "viem/chains"

// create a non redundant list of all from and to addresses of taopad Transfer event.

const rpcUrl = "https://eth-mainnet.g.alchemy.com/v2/I_wAoUHydGV1XVMlEFUww-mrts53NWVa"

const address = "0x5483DC6abDA5F094865120B2D251b5744fc2ECB5"

const fromBlock = 18786171n // block where taopad was deployed
const toBlock = 19018605n // current block when the script was run

const list: Record<`0x${string}`, true> = {}

const publicClient = createPublicClient({
    chain: mainnet,
    transport: http(rpcUrl)
})

const main = async () => {
    for (let i = fromBlock; i < toBlock; i += 2000n) {
        const transfers = await publicClient.getLogs({
            address,
            fromBlock: i,
            toBlock: i + 1999n,
            event: parseAbiItem("event Transfer(address indexed, address indexed, uint256)"),
        })

        for (let i = 0; i < transfers.length; i++) {
            const [from, to] = transfers[i].args

            if (from && !list[from]) {
                console.log(from)
                list[from] = true
            }

            if (to && !list[to]) {
                console.log(to)
                list[to] = true
            }
        }
    }
}

main()
